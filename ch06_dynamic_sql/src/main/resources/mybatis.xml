<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--指定properties文件的位置，从类路径开始找文件-->
    <properties resource="jdbc.properties"></properties>

    <settings>
        <!--设置mybatis输出日志-->
        <setting name="logImpl" value="STDOUT_LOGGING" />
    </settings>
    <!--定义别名-->
    <typeAliases>
        <!--
        可以指定一个类型一个自定义别名
        type：自定义类型的全限定名称
        alias:别名（短小，容易记忆的）
        -->

        <typeAlias type="com.lenovo.domain.Student" alias="stu"></typeAlias>
        <!--
        第二种方式
            <package> name是包名，这个包中所有的类，类名就是别名（类名不区分大小写）
        -->
        <package name="com.lenovo.domain"/>
        <package name="com.lenovo.vo"/>
    </typeAliases>

    <!--配置pagehelper插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor" />
    </plugins>

    <environments default="mydev">

        <environment id="mydev">
            <!--
                transactionManager:mybatis提交事务，回滚事务的方式
                    type:事务处理的类型
                        1）JDBC：表示mybatis底层时调用JDBC中的Connection对象的，commit，rollback
                        2）MANAGED:把mybatis的事务处理委托给其他的容器（一个服务器软件，一个框架（Spring））
            -->
            <transactionManager type="JDBC" />
            <!--
               data：表示数据源，java体系中，规定实现了javax.sql.DataSource接口的都是数据源。
                数据源表示Connection对象的。

               type：指定数据源的类型
                1）POOLED:使用连接池，mybatis会创建PooledDataSource类
                2)UPOOLED:不使用连接池，每次执行sql语句，先创建链接，执行sql，在关闭链接
                        mybatis会创建UPOOLEDDataSource，管理Connection对象的使用
                3）JNDI：java命名和目录服务（类似Windows注册表）

            -->

            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}" />
                <property name="url" value="${jdbc.url}" />
                <property name="username" value="${jdbc.user}" />
                <property name="password" value="${jdbc.password}" />
            </dataSource>
        </environment>
    </environments>
    <mappers>

        <mapper resource="com/lenovo/dao/StudentDao.xml"/>

        <!--
        指定多个mapper文件的方式
            使用包名
                name：xml文件（mapper文件）所在的包名，这个包中所有xml文件都能一次性加载给mybatis，使用package的要求
                    1.mapper文件名称需要和接口名称一样，区分大小写的一样
                    2.mapper文件和dao接口及需要在同一目录
        -->
    <!--<package name="com.lenovo.dao"/>-->
    </mappers>
</configuration>
